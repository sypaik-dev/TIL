.container {
  display: flex;
}

.container .section-text {
  flex-grow: 1;
}

.container .container2 {
  flex-basis: 486px;
  flex-shrink: 0;
}

@media (min-width: 1200px) {
  .container .container2 {
    flex-direction: row;
  }
  .container2 .link1,
  .container2 .link2 {
    flex-grow: 1;
    flex-basis: 0;
    /* flex는 자기가 가지고 있는 크기만 있는데 사용할 수 있는 공간을 채웠으면 좋겠다
    그래서 flex-grow를 주고! flex-basis를 줘야 비율을 맞출 수 있다.
    flex-basis : 0을 해줘야 여백 공간이 아닌 전체 공간을 분할한다.
    */
  }
}
@media (max-width: 1199px) {
  .container {
    flex-direction: column;
    /* 변동값 60 40 */
    gap: 60px;
  }
}

.container2 {
  display: flex;
  flex-direction: column;
  /* 변동값 20 20 14 */
  gap: 20px;
}

.grid-a h1 {
  font-size: 70px;
  font-weight: normal;
}

.grid-a p {
  color: #47494d;
  font-size: 20px;
  margin-top: 20px;
}

.link1,
.link2 {
  border-radius: 20px;
  color: #fff;
  padding: 40px 30px 30px 40px;
  aspect-ratio: 468 / 280;
}

.link1 {
  /* background: url(./webimg/background1.jpg) no-repeat 0 0 / cover; */
  background-color: wheat;
}

.link2 {
  background: url(./webimg/background2.jpg) no-repeat 0 0 / cover;
  background-color: pink;
}

.link1 strong,
.link2 strong {
  /* 변동값 30 24 20 */
  font-size: 30px;
}

.link1 {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.link1 span,
.link2 span {
  align-self: flex-end;
}

/* 가상 요소를 사용한 방법 */
.go-after::after {
  content: "";
  display: inline-block;
  width: 0.5em;
  height: 0.5em;
  /* background-color: royalblue; */
  border: 1px solid #fff;
  border-width: 1px 1px 0 0;
  transform: rotate(45deg);
  margin-left: 0.2em;
}

.go-bg {
  padding-right: 1.2em;
  background: url(./webimg/arrow.svg) no-repeat 100% center / 2.2em;
}
