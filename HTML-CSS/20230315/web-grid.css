.container {
  display: grid;
  grid-template-areas:
    "a b"
    "a c";
  gap: 20px;
}

.grid-a {
  grid-area: "a";
}

.grid-b {
  grid-area: "b";
}

.grid-c {
  grid-area: "c";
}

@media (max-width: 1200px) {
  .container {
    grid-template-areas:
      "a a"
      "b c";
  }
}

@media (min-width: 769px) and (max-width: 1200px) {
  .container {
    grid-template-columns: 1fr 1fr;
  }
}
@media (max-width: 768px) {
  .container {
    grid-template-areas:
      "a"
      "b"
      "c";
    gap: 14px;
  }
}

body {
  display: flex;
  height: 100vh;
  justify-content: center;
  align-items: center;
}

/* style */
.container {
  width: 1200px;
  max-width: calc(100% - 60px);
  min-width: 400px;
}

.grid-a h1 {
  font-size: 70px;
  font-weight: normal;
}

.grid-a p {
  color: #47494d;
  font-size: 20px;
  margin-top: 20px;
}

.grid-b,
.grid-c {
  border-radius: 20px;
  color: #fff;
  padding: 40px 30px 30px 40px;
  aspect-ratio: 468 / 280;
}

.grid-b {
  /* background: url(./webimg/background1.jpg) no-repeat 0 0 / cover; */
  background-color: wheat;
}

.grid-c {
  background: url(./webimg/background2.jpg) no-repeat 0 0 / cover;
  background-color: pink;
}

.grid-b strong,
.grid-c strong {
  /* 변동값 30 24 20 */
  font-size: 30px;
}

.grid-b {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.grid-b span,
.grid-c span {
  align-self: flex-end;
}

/* 가상 요소를 사용한 방법 */
.go-after::after {
  content: "";
  display: inline-block;
  width: 0.5em;
  height: 0.5em;
  /* background-color: royalblue; */
  border: 1px solid #fff;
  border-width: 1px 1px 0 0;
  transform: rotate(45deg);
  margin-left: 0.2em;
}

.go-bg {
  padding-right: 1.2em;
  background: url(./webimg/arrow.svg) no-repeat 100% center / 2.2em;
}

/* @media (max-wid) */

/* 다 짜고 변동값 주석으로 달아서 media마다 변동되는 부분만 넣기! */
